==== Process
Offical results:

http://wifo5-03.informatik.uni-mannheim.de/bizer/berlinsparqlbenchmark/results/V7/index.html#detailsExploreCompare

See run-complete for a script to drive all the scripts.

mkdir Data
mkdir TDB-DB

genAll      (choose sizes wanted)
SIZES="50k 250k" loadAll     (choose sizes to load)
SIZES="50k 250k" runPerf     (choose sizes to test)
# generate results 
runResults
Key results file:
bsbm_query_and_size_t1ables_of_stores.html
--> bsbm-query-results.html

Or:
Colelction of dated runs under Runs/
  genAllResults

Also:

DATE=[date 2010-MM-DD]
mkdir Runs/$DATE
mv Results/* Runs/$DATE


# Note: the Java code knows the range of possible store sizes
# If you miss 200m out, say, you get
# "Error: XML result file names must contain size metrics e.g. store_50k.xml for res-200m.xml"

# Run results and create bsbm-results.html in the Runs/DATE/ directories:
genAllResults


== Layout:

Data/data-SIZE/...files...
Results/res....

genAll creates all the datafiles laid out like this.

== BSBM details

The original benchmark uses the web API and ...
# Execute single-client test run (500 mixes performance measurement, randomizer seed: 808080)
# Execute multiple-client test runs. ( 4 clients, 500 query mixes, randomizer seed: 863528)
# Execute test run with reduced query mix. (repeat steps 2 to 4 with reduced query mix and different randomizer seed 919191)

== Generate

mkdir Data
# Alter sizes
genAll 

== Query
(can set SIZE in "db-size")

SIZES="50k 250k" loadAll     (choose sizes to load)
SIZES="50k 250k" runPerf     (choose sizes to test)

== Run Generator

50k:  128
250k: 666
5m:   14088

1M:     2785
25M:    70812
100M:   284826
200M:   570000

== Results

java -cp bin:lib/* benchmark.tools.ResultTransform ??????

Data layout:

StoreName/25m.xml etc etc

== Setup

??
TestDriver reads "-ucf FILE"
  Default is userses/explore/sparql.txt
Use case file is lines of 
  querymix=rel filename

Here, set to:
-ucf usecase.txt
==>
 querymix=DIRECTORY
 querymix=
for current directory
Unreliable


